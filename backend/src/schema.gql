# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Board {
  columns: [BoardColumn!]!
  createdAt: DateTime!
  id: ID!
  name: String!
  tasks: [Task!]!
  updatedAt: DateTime!
}

type BoardColumn {
  createdAt: DateTime!
  id: ID!
  name: String!
  position: Int!
  tasks: [Task!]!
  updatedAt: DateTime!
}

input CreateTaskInput {
  boardColumnId: ID!
  description: String
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createTask(input: CreateTaskInput!): Task!
  updateSubtaskCompleted(completed: Boolean!, id: ID!): UpdateSubtaskCompletedMutationResponse!
  updateTask(id: ID!, input: UpdateTaskInput!): Task!
}

interface MutationResponse {
  message: String!
  success: Boolean!
}

type Query {
  board(id: ID!): Board
  boards: [Board!]!
  hello: String!
  task(id: ID!): Task
}

type Subtask {
  completed: Boolean!
  createdAt: DateTime!
  id: ID!
  title: String!
  updatedAt: DateTime!
}

type SubtasksConnection {
  completedCount: Int!
  nodes: [Subtask!]!
  totalCount: Int!
}

type Task {
  column: BoardColumn!
  createdAt: DateTime!
  description: String!
  id: ID!
  subtasks: SubtasksConnection!
  title: String!
  updatedAt: DateTime!
}

type UpdateSubtaskCompletedMutationResponse implements MutationResponse {
  message: String!
  subtask: Subtask
  success: Boolean!
}

input UpdateTaskInput {
  boardColumnId: ID
  description: String
  title: String
}